<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>companionway</title>
    <link>https://www.companionway.net/</link>
    <description>Recent content on companionway</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>All rights reserved - companionway - 2016</copyright>
    <lastBuildDate>Wed, 30 Nov 2016 12:58:32 -0500</lastBuildDate>
    
	<atom:link href="https://www.companionway.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://www.companionway.net/hmpg-blocks/gads/</link>
      <pubDate>Wed, 30 Nov 2016 12:58:32 -0500</pubDate>
      
      <guid>https://www.companionway.net/hmpg-blocks/gads/</guid>
      <description>(adsbygoogle = window.adsbygoogle || []).push({});</description>
    </item>
    
    <item>
      <title>Quick_Note_about_fabric_and_pipenv</title>
      <link>https://www.companionway.net/post/quick_note_about_fabric_and_pipenv/</link>
      <pubDate>Wed, 13 Mar 2019 10:56:05 -0400</pubDate>
      
      <guid>https://www.companionway.net/post/quick_note_about_fabric_and_pipenv/</guid>
      <description>&lt;p&gt;I have posted several articles about python fabric and yet I failed to warn you about the dangers of
version chaos.&lt;/p&gt;

&lt;p&gt;Initially, fabric came as a python2 only application. They added support for python3 later. Here is the version
I am using in a virtual environment (more about that in a minute). From within my pipenv project directory with pipenv shell loaded
this is what I get running fab &amp;ndash;version&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fab --version
Fabric3 1.14.post1
Paramiko 2.4.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is how I created my virtual environment. I have used almost all of python&amp;rsquo;s virtual environment tools (and there a quite a few).
And there has been a steady progression of improvements in those tools. My current goto for a python virtual environment is pipenv.
It is simple, clean, and almost fool proof which is essential for me.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python fabric - Dynamically Discover Hosts</title>
      <link>https://www.companionway.net/post/using_fabric_to_dynamically_discover_hosts/</link>
      <pubDate>Tue, 12 Mar 2019 09:18:43 -0400</pubDate>
      
      <guid>https://www.companionway.net/post/using_fabric_to_dynamically_discover_hosts/</guid>
      <description>&lt;p&gt;Python fabric is a library tool for executing ssh commands remotely and responding as you desire.
I use python fabric for promoting code and web content. Essentially it is my devops tool to satisfy the
single most important devops rule: never log into a server! I use this over ansible or some of the other
devop tools because fabric only requires knowning one langauge and that is python.&lt;/p&gt;

&lt;p&gt;My network changes a lot as I take servers down or stand them up frequently. Normally that would require changing
the environment roles (host lists) in my fabfile.py with all my changes. In the past I set aside certain IPs in my
network for each role. For example all my raspberry pies get named before I ever introduce them to the network.
Using the option &amp;ndash;skip_bad_hosts with fabric is one way to do this but I really want more control.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Replace PHP with WSGI python</title>
      <link>https://www.companionway.net/post/replace_php_with_wsgi_python/</link>
      <pubDate>Tue, 20 Nov 2018 10:54:24 +0200</pubDate>
      
      <guid>https://www.companionway.net/post/replace_php_with_wsgi_python/</guid>
      <description>&lt;p&gt;This post is a brief description of replacing PHP code with python using WSGI (Web Server Gateway Interface). The journey here comes from how I monitor my servers (mostly raspberry pi&amp;rsquo;s). I used a PHP script on all my servers that delivered the hostname and basic server information and I use &lt;a href=&#34;http://xymon.sourceforge.net/&#34;&gt;xymon monitoring&lt;/a&gt; to poll that PHP script on all the servers and test to see if the hostname is contained in the returned page. My focus lately has been on python and my interest in PHP has waned. The goal was to replace my PHP script with a python script. The end result provides a simple means of delivering dynamic web pages. I will be using &lt;a href=&#34;http://bottlepy.org&#34;&gt;bottlepy&lt;/a&gt; as the wsgi web-framework. My development was done on an ubuntu 18.10 (&amp;ldquo;cosmic&amp;rdquo; release).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using a generic git pre-commit hook</title>
      <link>https://www.companionway.net/post/git_pre-commit/</link>
      <pubDate>Sun, 07 Oct 2018 10:05:52 -0400</pubDate>
      
      <guid>https://www.companionway.net/post/git_pre-commit/</guid>
      <description>&lt;h4 id=&#34;test-it-commit-it-reject-it&#34;&gt;test_it &amp;amp;&amp;amp; commit_it || reject_it&lt;/h4&gt;

&lt;p&gt;Using a pre-commit script when committing code makes sense and fits with every respectable dev-ops model.
The goal is to have respectable code &lt;em&gt;before&lt;/em&gt; it lands in a repository. Git makes this very easy through the use
of &amp;ldquo;hooks&amp;rdquo;. If you look in any of your git project directories you will find these files in the &lt;code&gt;./.git/hooks/&lt;/code&gt; directory:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vim ALE</title>
      <link>https://www.companionway.net/post/vim_ale/</link>
      <pubDate>Wed, 08 Aug 2018 09:30:10 -0400</pubDate>
      
      <guid>https://www.companionway.net/post/vim_ale/</guid>
      <description>&lt;p&gt;VIM is a standard for me. My UNIX career hung on my &amp;ldquo;vi&amp;rdquo; savvy which I learned appreciate from mentors who
encouraged me to learn the tips and tricks of using vi. My learning curve with vi/vim has never leveled
off, but rather, always gives me new features and tricks that energize me again. The latest vim &amp;ldquo;trick&amp;rdquo;
is ALE (Asynchronous Lint Engine).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vim Scriptable Templates</title>
      <link>https://www.companionway.net/post/vim_scriptable_templates/</link>
      <pubDate>Sun, 15 Jul 2018 14:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/vim_scriptable_templates/</guid>
      <description>&lt;h3 id=&#34;dynamic-vim-templates&#34;&gt;Dynamic vim Templates&lt;/h3&gt;

&lt;p&gt;Vim (or vi in the anceint past) has been my partner in getting things done. Like an rich tool it
has lots of features that go untapped or undiscovered. A few days ago I decided I wanted a script within
a tempate to help build the &amp;ldquo;front matter&amp;rdquo; to my markdown (.md) files.&lt;/p&gt;

&lt;p&gt;The front matter looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
author = &amp;quot;&amp;quot;
comments = true
date = &amp;quot;2018-07-15 14:45:19&amp;quot;
draft = false
image = &amp;quot;&amp;quot;
share = true
# slug = 
# tags = [ &amp;quot;tag1&amp;quot;, &amp;quot;tag2&amp;quot; ]
title = &amp;quot;vim_scriptable_templates&amp;quot;

+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The challenge was to have vim write in the date for me in the needed format. And if you use hugo as your static web site generator as I do
you may have found that it will silently ignore a new markdown file if the date is not formated correctly. It some testing to discover that
but the bottom line is that I needed a way to script it for to avoid mistakes.&lt;/p&gt;

&lt;p&gt;Research to me to this tip source: &lt;a href=&#34;http://vim.wikia.com/wiki/Use_eval_to_create_dynamic_templates&#34;&gt; vim embedded scripts &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo and Fabric</title>
      <link>https://www.companionway.net/post/hugo_and_fabric/</link>
      <pubDate>Sat, 14 Jul 2018 15:33:19 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/hugo_and_fabric/</guid>
      <description>&lt;p&gt;Python Fabric is a denatured version of ansible and, if you enjoy python, fabric makes a small scale devops strategy a whole lot less painful.
Combined with hugo static website generator, fabic makes testing and promoting a website a whole lot easier.&lt;/p&gt;

&lt;p&gt;I have struggled in the past with one challenge that made promoting website code from my workbench to dev, staging, and ultimately production tricky.
The matter of URL always played havoc when I sent code up from one server to another for testing. Hugo offers a simple solution. When I promote website
code it goes through this workflow process:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fabric_vs_ansible</title>
      <link>https://www.companionway.net/post/fabric_vs_ansible/</link>
      <pubDate>Tue, 10 Jul 2018 09:30:14 -0400</pubDate>
      
      <guid>https://www.companionway.net/post/fabric_vs_ansible/</guid>
      <description>&lt;h2 id=&#34;fabric-vs-ansible&#34;&gt;Fabric vs Ansible&lt;/h2&gt;

&lt;p&gt;I have wrestled with ansible for too long. It is an awesome tool but you need to learn the syntax of three
different languages (ansible, yaml, and maybe some python) to hold it down and control it. Every time I go
to use it I have to learn how to do what I need to do. But the most frustrating aspect of ansible when learning
to do something new is that your first attempt rarely succeeds - at least for me. So you resort to &amp;ldquo;force programming&amp;rdquo;
to get through it. By &amp;ldquo;force programming&amp;rdquo; I mean you try this and that and then something else until it works, and
I end up with a hodgepodge of debug lines commented out.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How this theme evolved</title>
      <link>https://www.companionway.net/articles/newspaper-hugo-subtheme/</link>
      <pubDate>Fri, 03 Nov 2017 10:54:24 +0200</pubDate>
      
      <guid>https://www.companionway.net/articles/newspaper-hugo-subtheme/</guid>
      <description>&lt;p&gt;First credit goes to Silke V at codepen.io name &amp;ldquo;silkine&amp;rdquo; [&lt;a href=&#34;http://www.silkevoigts.de/&#34;&gt;http://www.silkevoigts.de/&lt;/a&gt;].&lt;/p&gt;

&lt;p&gt;Original source code can be found here: &lt;a href=&#34;https://codepen.io/silkine/pen/jldif&#34;&gt;https://codepen.io/silkine/pen/jldif&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.companionway.net/img/newspaper-hugo-subtheme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I had a coworker who had a non-profit business blog that wanted to offer a newsletter to her clients.
So I got interested in finding an HTML format that gave an old traditional newspaper style.
Silke offered a solution that provided a strong simple css base. Currently (2017) I find
the hugo cms system to be the easiest most portable static web building application freely available.
The challenge was to create a full newsletter style theme as a subtheme within an existing theme
structure. So I mocked up a ported version of Silke&amp;rsquo;s newspaper css into a hugo &amp;ldquo;section&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;This project is a drop in offering to any existing hugo themed structure which will produce
a newsletter format in an &amp;ldquo;article(s)&amp;rdquo; hugo section. A user only needs to change the title, city,
and state varbiable that are stored as front matter in the ./content/articles/_index.md file.
Hugo uses this file natively to discover section (in this case &amp;ldquo;articles&amp;rdquo;) specific data. All
posts to the newsletter subtheme should be created in this ./content/articles/ directory as markdown
files. Running hugo new articles/mynewarticle.md will create a new file with the default front matter
pulled from ./archtypes/articles.md.&lt;/p&gt;

&lt;p&gt;This project becomes a drop in addition to any hugo theme to add a newspaper type subtheme section.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How this theme evolved</title>
      <link>https://www.companionway.net/post/newspaper-hugo-subtheme/</link>
      <pubDate>Fri, 03 Nov 2017 10:54:24 +0200</pubDate>
      
      <guid>https://www.companionway.net/post/newspaper-hugo-subtheme/</guid>
      <description>&lt;h3 id=&#34;announcing-a-new-project-newspaper-hugo-subtheme&#34;&gt;Announcing a new project: newspaper-hugo-subtheme&lt;/h3&gt;

&lt;p&gt;First credit goes to Silke V at codepen.io name &amp;ldquo;silkine&amp;rdquo; [&lt;a href=&#34;http://www.silkevoigts.de/&#34;&gt;http://www.silkevoigts.de/&lt;/a&gt;].
Original source code can be found here: &lt;a href=&#34;https://codepen.io/silkine/pen/jldif&#34;&gt;https://codepen.io/silkine/pen/jldif&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had a coworker who had a non-profit business blog that wanted to offer a newsletter to her clients.
So I got interested in finding an HTML format that gave an old traditional newspaper style
and Silke offered a solution that provided a strong simple css base. Currently (2017) I find
the hugo cms system to be the easiest most portable static web building application freely available.
The challenge was to create a full newsletter style theme as a subtheme within an existing theme
structure. So I mocked up a ported version of Silke&amp;rsquo;s newspaper css into a hugo &amp;ldquo;section&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;An example of this subtheme can be seen here: &lt;a href=&#34;https://www.companionway.net/articles&#34;&gt;[newspaper-hugo-subtheme]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This project is a drop in offering to any existing hugo themed structure which will produce
a newsletter format in an &amp;ldquo;article(s)&amp;rdquo; hugo section. A user only needs to change the title, city,
and state varbiable that are stored as front matter in the ./content/articles/_index.md file.
Hugo uses this file natively to discover section (in this case &amp;ldquo;articles&amp;rdquo;) specific data. All
posts to the newsletter subtheme should be created in this ./content/articles/ directory as markdown
files. Running hugo new articles/mynewarticle.md will create a new file with the default front matter
pulled from ./archtypes/articles.md.&lt;/p&gt;

&lt;p&gt;This project becomes a drop in addition to any hugo theme to add a newspaper type subtheme section.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>https://www.companionway.net/articles/article1/</link>
      <pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/articles/article1/</guid>
      <description>Lorem Ipsum &amp;ldquo;Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit&amp;hellip;&amp;rdquo; &amp;ldquo;There is no one who loves pain itself, who seeks after it and wants to have it, simply because it is pain&amp;hellip;&amp;rdquo;
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent cursus tortor nec urna dapibus, ac sagittis mauris varius. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam pretium sit amet nulla at consectetur.</description>
    </item>
    
    <item>
      <title>Persiciatis unde omnis</title>
      <link>https://www.companionway.net/articles/article2/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/articles/article2/</guid>
      <description>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.</description>
    </item>
    
    <item>
      <title>More fun with Latin</title>
      <link>https://www.companionway.net/articles/article3/</link>
      <pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/articles/article3/</guid>
      <description>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.</description>
    </item>
    
    <item>
      <title>Extremes of Good and Evil</title>
      <link>https://www.companionway.net/articles/article4/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/articles/article4/</guid>
      <description>Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of &amp;ldquo;de Finibus Bonorum et Malorum&amp;rdquo; (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, &amp;ldquo;Lorem ipsum dolor sit amet..&amp;rdquo;, comes from a line in section 1.10.32.
&amp;ldquo;Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit&amp;hellip;&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Translation is unnecessary</title>
      <link>https://www.companionway.net/articles/article5/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/articles/article5/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent cursus tortor nec urna dapibus, ac sagittis mauris varius. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam pretium sit amet nulla at consectetur. Curabitur vestibulum non odio dignissim posuere. Aliquam at maximus augue, at posuere mi. Quisque rhoncus ultricies pulvinar. Suspendisse viverra arcu lacus, ut ornare elit pharetra sit amet.
Suspendisse a enim sit amet massa efficitur malesuada.</description>
    </item>
    
    <item>
      <title>Laudantium</title>
      <link>https://www.companionway.net/articles/article6/</link>
      <pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/articles/article6/</guid>
      <description>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.</description>
    </item>
    
    <item>
      <title>MagicMirro2 and fauxmo</title>
      <link>https://www.companionway.net/post/post-title/</link>
      <pubDate>Wed, 11 Jan 2017 14:27:35 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/post-title/</guid>
      <description>&lt;h3 id=&#34;warning-what-follows-is-a-cascade-of-issues-and-lessons-learned-but-just-plain-fun&#34;&gt;Warning: what follows is a cascade of issues and lessons learned&amp;hellip; but just plain fun!&lt;/h3&gt;

&lt;h2 id=&#34;the-goal&#34;&gt;The goal&lt;/h2&gt;

&lt;p&gt;This project is designed to provide a reliable MagicMirror2 on a Raspberry Pi fitted with a 5 inch touchscreen that doubles to provide browsing if needed. This comes from a desire to have a quick aide in the kitchen that reports standard information when needed or a browser for looking up and displaying recipes etc.&lt;/p&gt;

&lt;p&gt;The result is a raspberry pi with one wire that stands on its edge without a case and has a 5 inch display. The display can show any of the modules provided for magicmirror2 on command to Alexa or stop magicmirror on command. The rasbian desktop along with an inboard keyboard pad and touch &amp;ldquo;pen&amp;rdquo; allows you to launch a browser (or any other program) and navigate to any url. When the desktop is idle a screensaver comes up with anynumber of pleasing animations - selectable and can be rotated with screen blanking possible as well. The backlight of the screen is enough to act as a soothing nightlight. All in all, I am very pleased (and so is my wife) with the final result of this project.&lt;/p&gt;

&lt;p&gt;There is a LOT of information here and lots of steps but it is worth it and you will definately learn lots of useful tricks. I am sure there are many improvements that could be made.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.companionway.net/img/k-pi1.jpg#floatright&#34; alt=&#34;Kitchen Pi Image:1&#34; /&gt;
&lt;!--
&lt;figure&gt;
    &lt;img src=&#34;https://www.companionway.net/img/k-pi1.jpg&#34;
         alt=&#34;KitchenPi&#34; width=&#34;60%&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;KitchenPi Image:1&lt;/h4&gt;&lt;p&gt;KitchenPi&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

--&gt;&lt;/p&gt;

&lt;h2 id=&#34;materials&#34;&gt;Materials&lt;/h2&gt;

&lt;p&gt;Hardware
- rasberry pi (in my case a model 3) with powersuppy
- 5 inch touchscreen with plastic pen
- USB storage (optional but recommended)
- you will need a temporary keyboard/mouse attached to set things up.&lt;/p&gt;

&lt;p&gt;Software
- berryboot (which will load rasbian)
- apache2 and php
- magicmirror2 and various modules
- fauxmo (from Maker Musings)
- software for the touchscreen including touch a calibration tool
- matchbox-keyboard
- xcreensaver&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sorting IPs</title>
      <link>https://www.companionway.net/post/sorting_ips/</link>
      <pubDate>Sun, 01 Jan 2017 15:53:14 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/sorting_ips/</guid>
      <description>&lt;p&gt;I scan my home network frequently. There are a good number of smarthome devices, raspberry pies, phones,
laptops, PCs etc. Using nmap to quickly scan a network is too slow for me - and it is a challenge to
parse the output for easy reading (of course I would use awk to do that). So I use arp-scan (available
in most repositories). So output might look like this:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Quick N Dirty Python Debug Function</title>
      <link>https://www.companionway.net/post/quick-n-dirty-python-debug-function/</link>
      <pubDate>Thu, 22 Dec 2016 14:08:05 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/quick-n-dirty-python-debug-function/</guid>
      <description>&lt;p&gt;Pdb is a great debugger for python but I like to use my own simple debug functions.
Here is a simple debug function for python which could definitely be improved:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Raspberry Pi and Xrdp</title>
      <link>https://www.companionway.net/post/raspberry-pi-and-xrdp/</link>
      <pubDate>Fri, 16 Dec 2016 12:27:36 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/raspberry-pi-and-xrdp/</guid>
      <description>&lt;p&gt;I decided to have some remote desktop fun with one of my raspberry pies. Remote desktop for the raspberry pi (or
any linux machine) can be done so many different ways - but the easiest from my perspective is xrdp. It is available
really on any linux distro and works with Windows remote desktop protocol (kinda). It requires that you install
xrdp and tightvncserver (under the covers it uses a vnc server - thightvncserver is probably the best choice here).
Then as a client on my laptop I use the very good remote desktop client called remmina; again it is availalbe on
almost any linux distro.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sometimes It Is The Obvious</title>
      <link>https://www.companionway.net/post/sometimes-it-is-the-obvious/</link>
      <pubDate>Thu, 15 Dec 2016 16:36:42 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/sometimes-it-is-the-obvious/</guid>
      <description>&lt;p&gt;This was one of those &amp;ldquo;problems&amp;rdquo; that nagged me for many hours until the obvious dawned on me.
I wrote a python script to grab the temperature and humidity from a DHT22 sensor and then write the
output with the proper syntax to send to my monitoring program [xymon]. The wrapper bash script ran
every 5 minutes and used a redirection to write out a file ie:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*/5 * * * * /usr/local/bin/temphum.sh &amp;gt;/tmp/temphum.dat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The wrapper script grabs output and sends it to the server. Having this wrapper script lets me run the
python script independently for testing or for curiosity.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Always Use Visudo</title>
      <link>https://www.companionway.net/post/always-use-visudo/</link>
      <pubDate>Wed, 14 Dec 2016 10:59:38 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/always-use-visudo/</guid>
      <description>&lt;h2 id=&#34;familiarity-breeds-contempt&#34;&gt;&amp;ldquo;familiarity breeds contempt&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;I get very comfortable with using the vim editor (take cover&amp;hellip; flame way ensuing) so
comfortable that using any other editor leaves me just a bit unnerved. I constantly use it
to update sudoers. The best way to modify sudoers is to add a supplimental inclusion file under
/etc/sudoers.d/whatevername - so the other day I needed to add an entry to allow the user for my
simple monitoring program (xymon) to be able to run &amp;ldquo;sudo ufw status&amp;rdquo; without a password and report
back to the monitor server.&lt;/p&gt;

&lt;p&gt;I fired up&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /etc/sudoers.d/xymon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and started to add the needed line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xymon ALL = NOPASSWD: /usr/sbin/ufw status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;but I got halfway through and could not remember the exact location&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Recursively Replace Text</title>
      <link>https://www.companionway.net/post/recursive-replace-text/</link>
      <pubDate>Sat, 10 Dec 2016 20:38:12 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/recursive-replace-text/</guid>
      <description>&lt;p&gt;Recently I had to do a find and replace text on multiple files recursively. I had to look up how to do it to remind myself of the exact syntax. If I had to look it up, you have to suffer seeing it in my blog post&amp;hellip; [smile]&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find ./ -name \*.md -print0 | xargs -0 sed -i &#39;s/header-img/img/&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be careful here. I used the -0 option to deal with any filename that have spaces in the name BUT it really requires that the find command contain the -print0 option otherwise things will not operate in the manner expected.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Switched to Hugo</title>
      <link>https://www.companionway.net/post/switched-to-hugo/</link>
      <pubDate>Fri, 09 Dec 2016 10:57:45 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/switched-to-hugo/</guid>
      <description>&lt;p&gt;I am swtiching from jekyll to hugo for flat file for a Content Managment System (CMS).
&lt;a href=&#34;https://gohugo.io&#34;&gt;&lt;img src=&#34;https://www.companionway.net/img/hugo-h.jpg&#34; alt=&#34;alt text&#34; title=&#34;goHugo.io&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is why:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It comes as a binary file that runs on pretty much any platform. A single file&amp;hellip; without a list of dependencies&lt;/li&gt;
&lt;li&gt;I could stop with the last reason and it would be enough&amp;hellip; but I have to say that the file tree used in hugo is simple, and simple is beautiful. As Einstein once said:
&amp;gt;“Make things as simple as possible, but not simpler.”&lt;/li&gt;
&lt;li&gt;It is written in googles go language&amp;hellip; so it is fast and portable.&lt;/li&gt;
&lt;li&gt;It is closely tied to git so it can easily be used on github and for version maintence.&lt;/li&gt;
&lt;li&gt;it builds a clean directory [./public/] for the full site deploy and this can be rsync&amp;rsquo;d to where ever you like.
or &amp;hellip; just git push it to hithub and use something like netlify.com to host from your github!&lt;/li&gt;
&lt;li&gt;&lt;em&gt;No frustrating&lt;/em&gt; version incompatiblities (or at least very minimal) - unlike jekyll which seemed to break on me every few months.&lt;/li&gt;
&lt;li&gt;hugo is relatively mature and has a huge developer backing.&lt;/li&gt;
&lt;li&gt;configurable and changed without challenges&lt;/li&gt;
&lt;li&gt;lots of themes to choose from&lt;/li&gt;
&lt;li&gt;as the Hugo websites states - it makes the web fun again&amp;hellip;&lt;/li&gt;
&lt;li&gt;Did I mention that it is a single executable file?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reference:
&lt;a href=&#34;https://gohugo.io/#intro&#34;&gt;gohugo.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy
-g-&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Converting Images</title>
      <link>https://www.companionway.net/post/converting-images/</link>
      <pubDate>Tue, 06 Dec 2016 11:58:20 -0500</pubDate>
      
      <guid>https://www.companionway.net/post/converting-images/</guid>
      <description>I have fought with trying to remember the syntax for Imagemagik&amp;rsquo;s convert command for years. I finaly caved in [from my normal position of &amp;ldquo;if you can&amp;rsquo;t do it from the commandline, then you are a wimp&amp;rdquo; and sought out a gui to help me quickly convert images to use on a website. Or to just roll a picture 90 or 180 degrees. The easy solution and a standard ubuntu repository file is &amp;ldquo;converseen&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>shell/bash uppercase arguments</title>
      <link>https://www.companionway.net/post/2015-05-11-post1/</link>
      <pubDate>Mon, 11 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-05-11-post1/</guid>
      <description>To make a long story short&amp;hellip;
#!/bin/bash PATTERN=$(echo $1 | tr [:lower:] [:upper:]) # or PATTERN=$(echo $1 | tr [a-z] [A-Z]) # or PATTERN=$(echo $1 | awk &#39;{print toupper($0)}&#39;) echo &amp;quot;Your \$1 argument is now uppercase: $1&amp;quot;  To make a short story long&amp;hellip;
Just to let you know a little more about me and reveal a few more shells tricks along the way.
 I am a very conservative investor - always have been but the low interest rates over the recent past has forced me to try a squeeze a little more out of the stock market also known as a &amp;ldquo;a gentleman&amp;rsquo;s gambling parlor of greedy people&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>The GrovePi kit</title>
      <link>https://www.companionway.net/post/grovepi/</link>
      <pubDate>Sat, 09 May 2015 10:54:24 +0200</pubDate>
      
      <guid>https://www.companionway.net/post/grovepi/</guid>
      <description>Check out GrovePi These kits make working with the Raspberry Pi GPIO pins so simple and clean. I just ordered one of these kits and I will try to write up a review after I work it over.
If you are interested in building a quick and easy raspberry pi for experimenting with the &amp;ldquo;Internet of Things&amp;rdquo; (aka IoT) platform - this board and kit looks like it will get you there in minutes.</description>
    </item>
    
    <item>
      <title>How to print the remainder of a line using awk</title>
      <link>https://www.companionway.net/post/2015-05-02-post1/</link>
      <pubDate>Sat, 02 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-05-02-post1/</guid>
      <description>&lt;p&gt;#How to print remainder of line using awk&lt;/p&gt;

&lt;h2 id=&#34;eliminate-the-first-x-columns&#34;&gt;eliminate the first X columns&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Here is your challenge you have a list of cronjobs and you
want to just execute the scheduled backup command with its
arguments for a test run.&lt;/p&gt;

&lt;p&gt;Using one command line, how would you do it?&lt;/p&gt;

&lt;p&gt;Here is a sample root cronjob and I want to run the
first entry with its arguments as a test run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# m h  dom mon dow   command
 0 16  *   *   * /data/share/home/geoffm/dev/utils/bak-it.sh -i /usr/local/etc/include.lst -e /usr/local/etc/exclude.lst -t /data/bak/`hostname` -s 7 &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
  5 0  *   *   * /data/share/motion/arch-files.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
*/15 *  *   *   * /data/share/home/geoffm/grab-pic.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
####### below are WIP or OLD ########
# 16 6  *   *   * /usr/sbin/lynis -c --auditor &amp;quot;automated&amp;quot; --cronjob --quiet &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
#*/5 *  *   *   * /usr/local/bin/watch-proc.sh -f /usr/local/etc/watch-proc.conf -n geoffm@localhost &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
#*/5 * * * * /data/share/home/geoffm/ping-pong.sh &amp;quot;ping -c2 192.168.1.55&amp;quot; &amp;quot;ssh 192.168.1.1 reboot&amp;quot; &amp;gt;/dev/null
#  7 * * * /usr/local/sbin/postfix_report.sh &amp;amp;&amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Creating that special character in vim</title>
      <link>https://www.companionway.net/post/2015-04-30-post1/</link>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-30-post1/</guid>
      <description>&lt;h1 id=&#34;entering-special-characters-into-vim&#34;&gt;Entering special characters into vim&lt;/h1&gt;

&lt;p&gt;I use vim as my editor. Despite this first sentence, this is not a
beginning volley to an editor flame war. I will save that for another
day.&lt;/p&gt;

&lt;p&gt;Ever editor has its own unique features and vim definitely no stranger to
that group. One feature I use quite a bit is what vim calls digraphs.&lt;/p&gt;

&lt;p&gt;There are thousands of characters other than the standard keyboard character
that can be displayed with vim. You may already know that you can use
&lt;code&gt;CTRL-v &amp;lt;enter&amp;gt;&lt;/code&gt; to force a linefeed into even a DOS filetype. Actually
`CTRL-v ascii### will force special characters from a long list of choices.&lt;/p&gt;

&lt;p&gt;But I prefer using CTRL-K followed by two semi-meaningful (slightly resembles the
intended special character) to create any one of literally thousands of special
characters.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git inside, git better, git stronger</title>
      <link>https://www.companionway.net/post/2015-04-28-post1/</link>
      <pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-28-post1/</guid>
      <description>&lt;h2 id=&#34;exploring-git-from-the-inside-out&#34;&gt;&amp;hellip; exploring git from the inside out &amp;hellip;&lt;/h2&gt;

&lt;p&gt;###Preface&lt;/p&gt;

&lt;p class=&#34;highcap&#34;&gt;Apologies up front - this is long... very long, but there is food for the brain here.
I will discuss git for personal use. Using it with many other contributors is 
an extension of the principle covered here. For simplicity, I am only going
to discuss you working alone and only using a single &#34;branch&#34; of code for
each project - again, for simplicity. Additionally we are going to examine
the git &#34;database&#34; (stored as compressed SHA-1 named files/objects) as we go.
We can gain a better understanding by reviewing the changes to the guts of
your personal git repository. We will not cover branches, tags, or the git daemon
in this discussion.
&lt;/p&gt;

&lt;p&gt;###Why git? (skip this if you are less than patient)&lt;/p&gt;

&lt;p&gt;Many years ago I used backups of my projects or just documents, notes, etc.
All worked well until it didn&amp;rsquo;t. If you make a mistake and back it up guess what,&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centering a string</title>
      <link>https://www.companionway.net/post/2015-04-02-post1/</link>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-02-post1/</guid>
      <description>&lt;h1 id=&#34;center-a-string-using-awk&#34;&gt;Center a string using awk&lt;/h1&gt;

&lt;h2 id=&#34;awk-everyone-s-favorite-right&#34;&gt;awk = everyone&amp;rsquo;s favorite - right?&lt;/h2&gt;

&lt;p&gt;People who know me also know that I prefer simple
universally available tools to get a job done. Awk is
probably one of my favorites because it does pretty
much anything I need for quick and simple jobs. It is
far more powerful than most people realize including
associative arrays and it will do anything grep and sed&lt;br /&gt;
can do.&lt;/p&gt;

&lt;p&gt;Recently I had the need to center a string of text. This
is a easy problem that pretty much any freshman programmer
can accomplish in a heartbeat but I decided to do it with
awk. This sample gives you a chance to explore rudimentary
features of awk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.companionway.net/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/page/about/</guid>
      <description>I am a native of Northern Virginia, grew up there, and worked most of my life there. I had all advantages that come with the area including a good school system and a relatively resilient economy.
After attending George Mason University and facing a recession, I maneuvred my way into the Fairfax County Fire Department. I had a wonderful 25 year career with the Fire Service and built strong friendships with many good people.</description>
    </item>
    
    <item>
      <title>Adding fade in and down javascript</title>
      <link>https://www.companionway.net/post/2015-04-05-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-05-post1/</guid>
      <description>&lt;h1 id=&#34;javascript-fade-in-and-down&#34;&gt;Javascript fade in and down&lt;/h1&gt;

&lt;p&gt;I wanted to change the header on the theme for my web site
to display a slide down and in header.&lt;/p&gt;

&lt;p&gt;The script needed to be a combination of two jquery animations.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;script src=&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
$(document).ready(function(){
    $(&#39;#fadeInDown&#39;)
    .css(&#39;display&#39;, &amp;quot;none&amp;quot;)
    .slideDown(2000)
    .animate(
      { opacity: 1 },
      { queue: false, duration: 2300 }
      );
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First we load in the jquery code from google nut this a single point of failure.
If there is network interruption jquery code is lost. But in my instance if the
network is failing then my web site probably is too.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ansible - modifying sudoers</title>
      <link>https://www.companionway.net/post/2015-04-17-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-17-post1/</guid>
      <description>&lt;h1 id=&#34;ansible-modifying-etc-sudoers&#34;&gt;Ansible - modifying /etc/sudoers&lt;/h1&gt;

&lt;p&gt;I have locked administrators out of using sudo with a simple typo.&lt;/p&gt;

&lt;p&gt;With ansible you can lockup sudo on every machine with a single error. So
I get pretty cautious with editing /etc/sudoers through any deployment application.&lt;/p&gt;

&lt;p&gt;Here is a quick example of going overboard to protect your sudoers file
when using ansible. This is in my &lt;code&gt;$ANSIBLE_DIR/roles/common/tasks/main.yml&lt;/code&gt; file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- name: Copy sudoers for safety
  command: cp /etc/sudoers /etc/sudoers.tmp

- name: Create sudoers.bak
  command: cp /etc/sudoers /etc/sudoers.bak

- name: Ensure admin group is in sudoers with NOPASSWD
  lineinfile: &amp;quot;dest=/etc/sudoers.tmp state=present regexp=&#39;^%admin &#39; line=&#39;%admin ALL=(ALL) NOPASSWD: ALL&#39; validate=&#39;visudo -cf %s&#39;&amp;quot;
  register: sudoers_tmp_ok

- name: Copy sudoers.tmp to sudoers
  when: sudoers_tmp_ok|success
  command: cp /etc/sudoers.tmp /etc/sudoers
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Command line disk tree</title>
      <link>https://www.companionway.net/post/2015-04-27-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-27-post1/</guid>
      <description>&lt;h1 id=&#34;command-line-disk-tree&#34;&gt;Command line disk tree&lt;/h1&gt;

&lt;p&gt;I am writing another article on the basics of using git. It
was going to be a short article however, given the subject it is
turning out to be much longer than I expected. But in the process
of writing it I had to frequently use a shell function I wrote years
ago that  displays a disk tree structure (optionally with files).&lt;/p&gt;

&lt;p&gt;I needed a way to see the changes to the .git directory as git commands
are executed against the repository. I thought I would share it
with you today.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Delete the last X files using sed</title>
      <link>https://www.companionway.net/post/2015-04-26-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-26-post1/</guid>
      <description>&lt;h2 id=&#34;simple-sed-trick-keeping-the-last-x-files&#34;&gt;Simple sed trick - keeping the last X files&lt;/h2&gt;

&lt;p&gt;How would you remove all but the last 10 files in a directory?&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s create 15 files with one second between there
creation time. Oldest one (first one) will be called
1.file
and the newest one (last one) will be called
15.file&lt;/p&gt;

&lt;p&gt;Run this code to do that:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for i in `seq 1 15`; do
  touch $i.fil
  sleep 1
done
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>https://www.companionway.net/page/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/page/links/</guid>
      <description> sysadmin or web dev tools  Link for gihub Ling for git-scm Link for ansible Link for vagrant Link for lxc Link for formspree.io Link for adminer  Quick tech headline news  Link for LinuxToday Link for DailyRotation  dynamic content management systems [dynamic CMS]  hugo Wordpress Drupal Joomla  static content managment systems [static CMS]  jekyll hugo gravCMS picoCMS statamic kirby FrogCMS CushyCMS  learning  learn python fundamentals canonical ubuntu tutorials realpython great-tutorials and tips  financial  barchart iextrading signup and use their api to pull down stock info I have a python script that I use almost every day to pull data for analyzing stock data investing seekingalpha finviz  </description>
    </item>
    
    <item>
      <title>MT7630e Wifi build and install</title>
      <link>https://www.companionway.net/post/2015-04-26-post2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-26-post2/</guid>
      <description>&lt;h1 id=&#34;wifi-mt7630e&#34;&gt;Wifi mt7630e&lt;/h1&gt;

&lt;p&gt;Today&amp;rsquo;s hero is Jakub Kicinski. He rewrote the Mediatek MT7630e drivers
to clean up the code &lt;em&gt;and&lt;/em&gt; work with the new kernels. I have been waiting
for someone to do this since they (ubuntu) moved forward from kernel 3.13.xxxx.&lt;/p&gt;

&lt;p&gt;Kudo&amp;rsquo;s to Mr. Kicinski!&lt;/p&gt;

&lt;p&gt;Here is the link:
&lt;a href=&#34;https://github.com/kuba-moo/mt7630e.git&#34;&gt;github kuba-moo/mt7630e&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://www.companionway.net/page/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/page/projects/</guid>
      <description>gomenu - [link to gomenu]  This is a bash shell script that builds and allows editing of menus on the command-line newspaper-hugo-subtheme - [link to newspaper-hugo-subtheme]  This project allows you to add a newspaper look and feel theme to an existing hugo website. myfiles: [discontinued] this is an older php project which allows html control of directories for file upload or download - not available publicly pyfiles: [link to pyfiles])https://github.</description>
    </item>
    
    <item>
      <title>SSH basics</title>
      <link>https://www.companionway.net/post/2015-04-15-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-15-post1/</guid>
      <description>&lt;h1 id=&#34;ssh&#34;&gt;SSH&lt;/h1&gt;

&lt;h2 id=&#34;debug-with-verbose-output&#34;&gt;Debug with verbose output&lt;/h2&gt;

&lt;p&gt;$HOME/.ssh/config first and foremost - debug with -vvvv&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;actually do it before you need to so you can see how it works&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;from-wikipedia-paraphrased&#34;&gt;From Wikipedia (paraphrased):&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Secure Shell, or SSH, is a cryptographic (encrypted) network
protocol for initiating text-based shell sessions[clarification needed] on
remote machines in a secure way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In 1995, Tatu Ylönen, a researcher at Helsinki University of Technology,
Finland, designed the first version of the protocol (now called SSH-1) prompted by a password-sniffing attack at his university network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vagrant and ansible</title>
      <link>https://www.companionway.net/post/2015-04-23-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-23-post1/</guid>
      <description>&lt;h1 id=&#34;vagrant-and-ansible&#34;&gt;vagrant and ansible&lt;/h1&gt;

&lt;h2 id=&#34;putting-vagrant-on-steroids&#34;&gt;putting vagrant on steroids&lt;/h2&gt;

&lt;p&gt;First, set up vagrant to create a group of guest virtual machines (see previous posts).
We will assume your Vagrantfile is configured to build/start 3 nodes (node1, node2, node3). If these are
bare builds you will want to personalize or customize each of them.&lt;/p&gt;

&lt;p&gt;Chances are you will want to give each of them a common base of applications
and configuration. As a significant example, downloaded images are set
for universal time; not what you want. It is simple to just edit the
/etc/timezone file or write a script to change it on multiple machines. But if
you have lots of machines or tear these machines down and stand them back up
frequently then exercises like this will get very tedious. Additionally
there are and handful of packages you typically want one every machine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vagrant lxc nodes</title>
      <link>https://www.companionway.net/post/2015-04-22-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-22-post1/</guid>
      <description>&lt;h1 id=&#34;using-vagrant-with-lxc&#34;&gt;Using vagrant with lxc&lt;/h1&gt;

&lt;h3 id=&#34;one-command-vagrant-up&#34;&gt;One command; vagrant up&lt;/h3&gt;

&lt;p&gt;Now that I successfully managed to get vagrant-lxc plugin to
work (see previous post),  I decided to migrate my virtualbox Vagrantfile to vagrant lxc.
I have used vagrant and virtualbox to create and bring up
3 vm guest nodes on my laptop and then use node1 as a dev
machine, node2 as a staging machine, and node3 as a production
machine. That way I can test easily with greater confidence
with each promotion of new code.&lt;/p&gt;

&lt;p&gt;So why use lxc when virtualbox is working fine? The answer is
obvious for anyone who is familiar with these platforms&amp;hellip;
lxc is much much faster to bring up, halt, tear down.. and
you can do quich-n-dirty temporary testing with lxc-start-ephemeral.
Just too many advantages for developing and testing code in a
small network.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vagrant-lxc plugin</title>
      <link>https://www.companionway.net/post/2015-04-21-post1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.companionway.net/post/2015-04-21-post1/</guid>
      <description>&lt;h1 id=&#34;vagrant-lxc-plugin&#34;&gt;vagrant-lxc plugin&lt;/h1&gt;

&lt;p&gt;OK today I finally had time to get vagrant-lxc to work.
Up until now I have had vagrant virtualbox working just fine but
when I looked into lxc containers with vagrant I ran into a
little problem. First, I added vagrant-lxc plugin with this
command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagran plugin install vagrant-lxc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this failed first asking for hostsupname plugin so I added that &amp;hellip;
Then it complained about not being able to find the vagrant-lxc plugin
even though this command showed it listed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant plugin list
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>